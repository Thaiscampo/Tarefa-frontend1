[{"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\index.tsx":"1","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\App.tsx":"2","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\routes.tsx":"3","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\pages\\Home\\index.tsx":"4","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\pages\\Tasks\\index.tsx":"5","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\components\\Header\\index.tsx":"6","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\services\\api.ts":"7","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\index.tsx":"8","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\App.tsx":"9","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\routes.tsx":"10","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\components\\Header\\index.tsx":"11","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\pages\\Tasks\\Form\\index.tsx":"12","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\pages\\Home\\index.tsx":"13","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\pages\\Tasks\\index.tsx":"14","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\services\\api.ts":"15"},{"size":247,"mtime":1633984891210,"results":"16","hashOfConfig":"17"},{"size":284,"mtime":1633985372930,"results":"18","hashOfConfig":"17"},{"size":390,"mtime":1633985196058,"results":"19","hashOfConfig":"17"},{"size":126,"mtime":1633985133564,"results":"20","hashOfConfig":"17"},{"size":2305,"mtime":1633986220969,"results":"21","hashOfConfig":"17"},{"size":781,"mtime":1633985417881,"results":"22","hashOfConfig":"17"},{"size":122,"mtime":1633985012354,"results":"23","hashOfConfig":"17"},{"size":247,"mtime":1633984891210,"results":"24","hashOfConfig":"25"},{"size":284,"mtime":1633985372930,"results":"26","hashOfConfig":"25"},{"size":593,"mtime":1634070517774,"results":"27","hashOfConfig":"25"},{"size":781,"mtime":1633985417881,"results":"28","hashOfConfig":"25"},{"size":2957,"mtime":1634070558475,"results":"29","hashOfConfig":"25"},{"size":126,"mtime":1633985133564,"results":"30","hashOfConfig":"25"},{"size":2762,"mtime":1634070532941,"results":"31","hashOfConfig":"25"},{"size":140,"mtime":1636762912609,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1cnf3h1",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"135jex",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\index.tsx",[],["66","67"],"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\App.tsx",[],"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\routes.tsx",[],"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\pages\\Tasks\\index.tsx",[],"C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\components\\Header\\index.tsx",["68"],"import React from 'react';\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n \r\nconst Header: React.FC = () => {\r\n    return(\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n            <Navbar.Brand href=\"#home\">Tarefas</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n                <Nav.Link as={Link} className=\"nav-Item\" to=\"/\" >Início</Nav.Link>\r\n                <Nav.Link as={Link} className=\"nav-Item\" to=\"/tarefas\" >Tarefas</Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n \r\nexport default Header;\r\n","C:\\Users\\Tatiane\\Aulas\\tarefa-frontend\\src\\services\\api.ts",[],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\index.tsx",[],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\App.tsx",[],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\routes.tsx",[],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\components\\Header\\index.tsx",["69"],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\pages\\Tasks\\Form\\index.tsx",["70"],"src\\pages\\Tasks\\Form\\index.tsx\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport api from '../../../services/api';\r\nimport './index.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n \r\ninterface ITask{\r\n    title: string;\r\n    description: string;\r\n}\r\n \r\nconst Tasks: React.FC = () => {\r\n    \r\n    const history = useHistory()\r\n    const { id } = useParams<{ id: string }>()\r\n \r\n    const [model, setModel] = useState<ITask>({\r\n        title: '',\r\n        description: ''\r\n    })\r\n \r\n    useEffect(() => {\r\n        console.log(id)\r\n        if (id != undefined) {\r\n            findTask(id)\r\n        }\r\n    }, [id])\r\n \r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n \r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault()\r\n \r\n        if (id != undefined) {\r\n            const response = await api.put(`/tasks/${id}`, model)\r\n        }\r\n        else{\r\n            const response = await api.post('/tasks', model)\r\n        }\r\n        back()\r\n    }\r\n \r\n    function back(){\r\n        history.goBack()\r\n    }\r\n \r\n    async function findTask(id: string){\r\n        const response = await api.get(`tasks/${id}`)\r\n        console.log(response)\r\n        setModel({\r\n            title: response.data.title,\r\n            description: response.data.description\r\n        })\r\n    }\r\n \r\n    return (\r\n        \r\n        <div className=\"container\">\r\n            <br />\r\n            <div className=\"task-header\">\r\n                <h1>Nova Tarefa</h1>\r\n                <Button variant=\"dark\" size=\"sm\" onClick={back}>Voltar</Button>\r\n            </div>\r\n            <br />\r\n            <div className=\"container\">\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group>\r\n                        <Form.Label>Título</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={model.title}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n                    <Form.Group>\r\n                        <Form.Label>Descrição</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            name=\"description\"\r\n                            value={model.description}\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}/>\r\n                    </Form.Group>\r\n \r\n                    <Button variant=\"dark\" type=\"submit\">\r\n                        Salvar\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Tasks;\r\n","C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\pages\\Tasks\\index.tsx",[],"C:\\Users\\Tatiane\\Aulas\\Tarefa-frontend1\\src\\services\\api.ts",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":34,"nodeType":"77","messageId":"78","endLine":2,"endColumn":45},{"ruleId":"75","severity":1,"message":"76","line":2,"column":34,"nodeType":"77","messageId":"78","endLine":2,"endColumn":45},{"ruleId":null,"fatal":true,"severity":2,"message":"79","line":1,"column":3},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","Parsing error: Invalid character.","no-global-assign","no-unsafe-negation"]